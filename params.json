{"tagline":"Batma 2D Python Game Engine","google":"","name":"Batma","body":"# Batma 2D\r\n\r\nBatma is a pygame based game engine, inspired by XNA's structure. Providing an\r\nintuitive framework for game development and other graphical applications.\r\n\r\n\r\n## Features\r\n\r\n* Input state for keyboard and mouse;\r\n* Sprites and Texts with easy rotation, scaling, positioning;\r\n* 2D and 3D math library;\r\n* Scheduling of user defined functions;\r\n* Scene based;\r\n\r\n\r\n## Documentation\r\n\r\nVisit the [documentation](http://renatopp.github.com/batma/docs/). (incomplete yet)\r\n\r\n\r\n## Game Workflow\r\n\r\nInspired by XNA, a Batma game follows almost the same structure:\r\n\r\n    class MyGame(batma.Scene):\r\n        def initialize(self):\r\n            \"\"\"Initializes game components, such screen properties\"\"\"\r\n            ...\r\n        \r\n        def load_content(self):\r\n            \"\"\"Load game assets, such as sprites, fonts and sound effects\"\"\"\r\n            ...\r\n\r\n        def unload_content(self):\r\n            '''Unload game assets'''\r\n        \r\n        def update(self, tick):\r\n            \"\"\"Called each frame, add all the game logic here\"\"\"\r\n            ...\r\n        \r\n        def draw(self):\r\n            \"\"\"Called each frame to draw sprites and other assert on screen\"\"\"\r\n            ...\r\n    \r\n    game = MyGame()\r\n    batma.run(game)\r\n\r\n\r\n## Requirements\r\n\r\n* Python 2.7+; Not tested in 3.x\r\n* PyGame 1.9.1+;\r\n\r\n\r\n## Installing\r\n\r\nInstalling from source:\r\n\r\n    python setup.py install\r\n","note":"Don't delete this file! It's used internally to help with page regeneration."}